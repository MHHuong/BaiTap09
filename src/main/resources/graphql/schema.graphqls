# ====== Types ======
type User {
    id: ID!
    fullname: String!
    email: String!
    phone: String
    role: String
    categories: [Category!]
}

type Category {
    id: ID!
    name: String!
    images: String
    users: [User!]
}

type Product {
    id: ID!
    title: String!
    quantity: Int
    description: String
    price: Float
    user: User
}

# ====== Inputs ======
input UserInput {
    id: ID
    fullname: String!
    email: String!
    password: String
    phone: String
    categoryIds: [ID!]
}

input CategoryInput {
    id: ID
    name: String!
    images: String
}

input ProductInput {
    id: ID
    title: String!
    quantity: Int
    description: String
    price: Float
    userId: ID
}

# ====== Queries ======
type Query {
    users: [User!]!
    user(id: ID!): User

    categories: [Category!]!
    category(id: ID!): Category

    products: [Product!]!
    product(id: ID!): Product

    productsByCategory(categoryId: ID!): [Product!]!
    productsByPriceAsc: [Product!]!
}

# ====== Mutations ======
type Mutation {
    createUser(in: UserInput!): User!
    updateUser(in: UserInput!): User!
    deleteUser(id: ID!): Boolean!

    createCategory(in: CategoryInput!): Category!
    updateCategory(in: CategoryInput!): Category!
    deleteCategory(id: ID!): Boolean!

    createProduct(in: ProductInput!): Product!
    updateProduct(in: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!
}